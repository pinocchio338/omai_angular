import { Component, OnInit, ElementRef } from '@angular/core';
declare var d3: any;
declare var TrendChart: any;
declare var refreshGraph: any;
declare var sources: any;
import { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';
import { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';
import { DashboardsService } from '../dashboards.service'

@Component({
  selector: 'app-new-component',
  templateUrl: './new-component.component.html',
  styleUrls: ['./new-component.component.scss']
})
export class NewComponentComponent implements OnInit {

    createForm: FormGroup;
    realTime: boolean = false;
    status: boolean = false;
    containers:any = [];
    graphView:any = [
      {view:"view1",dataView:"View 1",field:"f0",name:"Field 0"},
      {view:"view2",dataView:"View 2",field:"f1",name:"Field 1"},
      {view:"view3",dataView:"View 3",field:"f2",name:"Field 2"}
    ];
    selectFieldList: any = [];
    selectedDiv: any = 0;
    selectEvent: any = true;

    lastDate: any;
    firstObj: any;
    lineArr:any =[];
    timerID;
    MAX_LENGTH = 900;
    duration = 1000;
    yAxis:any =[];
    xAxis = {label:"Timestamp",field:"date"};
    cConfig ={
      label:"timestamp",
      field:"t_stamp",
      height:500,
      width:960,
      XticksOrientation:"0",
      LegendsPlacement:"BOTTOM"
    };
    outlet
    outletCo2 = [2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,2.039999962,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052,1.820000052];
    outletch

    graphView1:any = [
      {view:"view1",legend:"Outlet O2",label:"Gas",color:"red",field:"f0",axis:"y0", unit:"%"},
      {view:"view2",legend:"Outlet CO2",label:"Gas",color:"green",field:"f1",axis:"y1", unit:"%"},
      {view:"view3",legend:"Outlet CH4",label:"Gas",color:"blue",field:"f2",axis:"y2", unit:"%"}
    ];
    
    yAxisData: any = [];
    data1:any;

    constructor(
        private formBuilder: FormBuilder,
        private elementRef: ElementRef, 
        private sanitizer: DomSanitizer,
        private dashboardsService: DashboardsService
    ) { }

    ngOnInit(): void {
        this.createForm = this.formBuilder.group({
          chartId: [''],
          chartValue: [''],
          graphTypes: ['2'],
          componentName: [''],
          dataview: ['All'],
          yaxis: [''],
          color: [''],
          axis: [''],
          unit: [''],
          label: [''],
          field: [''],
          xaxisLabel: [''],
          xaxisField: [''],
          legendPos: [''],
          XticksOrientation: ['']
        });

        d3.select("#liveData").on("click", () => {
          this.realTime = d3.select("#liveData").node().checked;
        });
        d3.selectAll('input').property('checked', false);

        
        this.dashboardsService.getApplyD3Chart().subscribe((res) => {
          this.containers = res;
        });

        setTimeout(() => {
          this.onChangeDemo(this.selectEvent, this.selectedDiv);
          this.getGraphData();
        },2000);
    }

    getGraphData(){
      for (const graph of this.containers) {
        if(graph.dataview != undefined){
          this.xAxis = {label:graph.xaxisLabel, field:graph.xaxisField};
          this.cConfig = {
            label:"timestamp",
            field:"t_stamp",
            height:500,
            width:(this.status) ? 960 : 1300,
            XticksOrientation:graph.XticksOrientation,
            LegendsPlacement:graph.legendPos
          };
          this.yAxis = graph.data;
          d3.select("#show_svg"+graph.chartValue).remove();
          d3.select("#tooltipDiv"+graph.chartValue).remove();
          var chart =   TrendChart(this.cConfig, this.xAxis, this.yAxis, graph.chartValue);
          if (this.realTime == true || graph.graphTypes == '1') {
            // start timer
            this.timerID = setInterval(() => this.RefreshLineChart(), 1000);
          } else {
            // stop timer
            window.clearInterval(this.timerID);
            d3.selectAll(".dot0").remove();
            d3.selectAll(".dot1").remove();
            d3.selectAll(".dot2").remove();
          }
          this.seedData(graph.dataview);      
          const htmlRef = this.elementRef.nativeElement.querySelector('#chart'+graph.chartValue);
          d3.select(htmlRef).datum(this.lineArr).call(chart);
        }else{
          this.xAxis = {label:this.yAxisData.xaxisLabel, field:this.yAxisData.xaxisField};
          this.cConfig = {
            label:"timestamp",
            field:"t_stamp",
            height:500,
            width:(this.status) ? 960 : 1300,
            XticksOrientation:this.yAxisData.XticksOrientation,
            LegendsPlacement:this.yAxisData.legendPos
          };
          this.yAxis = this.yAxisData.data;
          d3.select("#show_svg"+this.yAxisData.chartValue).remove();
          d3.select("#tooltipDiv"+this.yAxisData.chartValue).remove();
          var chart =   TrendChart(this.cConfig, this.xAxis, this.yAxis, this.yAxisData.chartValue);
          if (this.realTime == true || this.yAxisData.graphTypes == '1') {
            // start timer
            this.timerID = setInterval(() => this.RefreshLineChart(), 1000);
          } else {
            // stop timer
            window.clearInterval(this.timerID);
            d3.selectAll(".dot0").remove();
            d3.selectAll(".dot1").remove();
            d3.selectAll(".dot2").remove();
          }
          this.seedData(this.yAxisData.dataview);      
          const htmlRef = this.elementRef.nativeElement.querySelector('#chart'+this.yAxisData.chartValue);
          d3.select(htmlRef).datum(this.lineArr).call(chart);
        }
      }
    }

    RefreshLineChart():any {
      if (typeof(sources) !== "undefined" && (sources !== null )){
        this.lastDate = this.lineArr[this.lineArr.length-1].date;
        this.firstObj = this.lineArr[0]
        //comment out the following line to add incremental batch of data to the grpath
        this.lineArr.shift();
        this.lineArr.push({ date: this.addSeconds(1, this.lastDate),  "f0":this.firstObj.f0 , "f1":this.firstObj.f1, "f2":this.firstObj.f2 });
        refreshGraph(this.lineArr);
      }
    }

    addSeconds(numOfSeconds, date = new Date()) {
      var t = new Date(date.valueOf());
      date.setSeconds(t.getSeconds() + numOfSeconds);
      return date;
    }

    randomNumberBounds(min, max) {
      return  (Math.random() * (max - min + 1) + min)
    }
    seedData(value) {
      this.lineArr = [];
      var now = new Date();
      for (var i = 0; i < this.MAX_LENGTH; ++i) {
        {
          if(value != "All"){
            if(value == "view1"){
              this.lineArr.push({
                date: new Date(now.getTime() - ((this.MAX_LENGTH - i) * this.duration)),
                f0:  this.outletO2[i]
              });
            }else if(value == "view2"){
              this.lineArr.push({
                date: new Date(now.getTime() - ((this.MAX_LENGTH - i) * this.duration)),
                f1:  this.outletCo2[i]
              });
            }else if(value == "view3"){
              this.lineArr.push({
                date: new Date(now.getTime() - ((this.MAX_LENGTH - i) * this.duration)),
                f2:  this.outletch4[i]
              });
            }
          }else{
            this.lineArr.push({
              date: new Date(now.getTime() - ((this.MAX_LENGTH - i) * this.duration)),
              f0:  this.outletO2[i],
              f1:  this.outletCo2[i],
              f2:  this.outletch4[i],
            });
          }
        }
      }
    }

    onSubmit() {
      const data = [];
      data.push({
        legend: this.createForm.controls['yaxis'].value,
        color: this.createForm.controls['color'].value,
        field: this.createForm.controls['field'].value,
        axis: this.createForm.controls['axis'].value,
        unit: this.createForm.controls['unit'].value,
        label: this.createForm.controls['label'].value
      });
      this.data1 = {
        chartId: this.createForm.controls['chartId'].value,
        chartValue: this.createForm.controls['chartValue'].value,
        graphTypes: this.createForm.controls['graphTypes'].value,
        componentName: this.createForm.controls['componentName'].value,
        dataview: this.createForm.controls['dataview'].value,
        data:data,
        xaxisLabel: this.createForm.controls['xaxisLabel'].value,
        xaxisField: this.createForm.controls['xaxisField'].value,
        legendPos: this.createForm.controls['legendPos'].value,
        XticksOrientation: this.createForm.controls['XticksOrientation'].value
      }
      this.dashboardsService.applyD3Chart(this.data1).subscribe((res) => {
        this.yAxisData = res;
        this.getGraphData();
      });
    }
    
    clickEvent(){
      this.status = !this.status;
      this.getGraphData();     
    }

    add() {
      this.containers.push(this.containers.length);
    }

    onChangeDemo(event, index) {
      if(event){
        this.selectedDiv = index;
        this.createForm.controls["chartId"].setValue("#chart"+index);
        this.createForm.controls["chartValue"].setValue(index);
      }else{
        this.selectedDiv = null;
        this.createForm.controls["chartId"].setValue("");
        this.createForm.controls["chartValue"].setValue("");
      }
    }

    deleteFrame(index: number) {
      this.containers.splice(index, 1);
    }

    get field(): FormControl {
      return this.createForm.get('field') as FormControl;
    }

    selectView(event){
      this.field.setValue('');
      const selectedFields = [];
      for (const field of this.graphView) {
        if(field.view == event.target.value){
          selectedFields.push(field);
          this.field.setValue(field.field);
        }
      }
      this.selectFieldList = selectedFields;
    }

}
